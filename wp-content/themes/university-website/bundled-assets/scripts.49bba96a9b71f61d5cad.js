!function(e){function t(t){for(var n,r,o=t[0],l=t[1],c=t[2],h=0,d=[];h<o.length;h++)r=o[h],Object.prototype.hasOwnProperty.call(a,r)&&a[r]&&d.push(a[r][0]),a[r]=0;for(n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n]);for(u&&u(t);d.length;)d.shift()();return i.push.apply(i,c||[]),s()}function s(){for(var e,t=0;t<i.length;t++){for(var s=i[t],n=!0,o=1;o<s.length;o++){var l=s[o];0!==a[l]&&(n=!1)}n&&(i.splice(t--,1),e=r(r.s=s[0]))}return e}var n={},a={0:0},i=[];function r(t){if(n[t])return n[t].exports;var s=n[t]={i:t,l:!1,exports:{}};return e[t].call(s.exports,s,s.exports,r),s.l=!0,s.exports}r.m=e,r.c=n,r.d=function(e,t,s){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(r.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)r.d(s,n,function(t){return e[t]}.bind(null,n));return s},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="/wp-content/themes/fictional-university-theme/bundled-assets/";var o=window.webpackJsonp=window.webpackJsonp||[],l=o.push.bind(o);o.push=t,o=o.slice();for(var c=0;c<o.length;c++)t(o[c]);var u=l;i.push([2,1]),s()}([,function(e,t,s){},function(e,t,s){"use strict";s.r(t);s(1);var n=class{constructor(){document.querySelectorAll(".acf-map").forEach(e=>{this.new_map(e)})}new_map(e){var t=e.querySelectorAll(".marker"),s={zoom:16,center:new google.maps.LatLng(0,0),mapTypeId:google.maps.MapTypeId.ROADMAP},n=new google.maps.Map(e,s);n.markers=[];var a=this;t.forEach((function(e){a.add_marker(e,n)})),this.center_map(n)}add_marker(e,t){var s=new google.maps.LatLng(e.getAttribute("data-lat"),e.getAttribute("data-lng")),n=new google.maps.Marker({position:s,map:t});if(t.markers.push(n),e.innerHTML){var a=new google.maps.InfoWindow({content:e.innerHTML});google.maps.event.addListener(n,"click",(function(){a.open(t,n)}))}}center_map(e){var t=new google.maps.LatLngBounds;e.markers.forEach((function(e){var s=new google.maps.LatLng(e.position.lat(),e.position.lng());t.extend(s)})),1==e.markers.length?(e.setCenter(t.getCenter()),e.setZoom(16)):e.fitBounds(t)}};var a=class{constructor(){this.menu=document.querySelector(".site-header__menu"),this.openButton=document.querySelector(".site-header__menu-trigger"),this.events()}events(){this.openButton.addEventListener("click",()=>this.openMenu())}openMenu(){this.openButton.classList.toggle("fa-bars"),this.openButton.classList.toggle("fa-window-close"),this.menu.classList.toggle("site-header__menu--active")}},i=s(0);var r=class{constructor(){if(document.querySelector(".hero-slider")){const e=document.querySelectorAll(".hero-slider__slide").length;let t="";for(let s=0;s<e;s++)t+=`<button class="slider__bullet glide__bullet" data-glide-dir="=${s}"></button>`;document.querySelector(".glide__bullets").insertAdjacentHTML("beforeend",t),new i.a(".hero-slider",{type:"carousel",perView:1,autoplay:3e3}).mount()}}};var o=class{constructor(){this.isOverlayOpen=!1,this.typingTimer,this.isSpinnerVisible=!1,this.previewsValue,this.init()}setupDOMReferences(){this.openButton=document.querySelectorAll(".js-search-trigger"),this.closeButton=document.querySelector(".search-overlay__close"),this.searchOverlay=document.querySelector(".search-overlay"),this.searchInput=document.querySelector("#search-term"),this.resultsDiv=document.querySelector("#search-overlay__results"),this.body=document.querySelector("body")}getFocusedInputs(){if(document.querySelector(":focus"))return document.querySelector(":focus").nodeName,!0}openOverlay(e){e.preventDefault(),this.searchOverlay.classList.add("search-overlay--active"),this.body.classList.add("body-no-scroll"),this.searchInput.value="",setTimeout(()=>{this.searchInput.focus({preventScroll:!1})},500),this.isOverlayOpen=!0}closeOverlay(e){this.searchOverlay.classList.remove("search-overlay--active"),this.body.classList.remove("body-no-scroll"),this.isOverlayOpen=!1}keyPressDispatcher(e){83!==e.keyCode||this.isOverlayOpen||this.getFocusedInputs()?27===e.keyCode&&this.isOverlayOpen&&this.closeOverlay(e):this.openOverlay(e)}typingLogic(e){this.searchInput.value!=this.previewsValue&&(clearTimeout(this.typingTimer),this.searchInput.value?(this.isSpinnerVisible||(this.isSpinnerVisible=!0,this.resultsDiv.innerHTML='<div class="spinner-loader"></div>'),this.typingTimer=setTimeout(this.getResults.bind(this),750)):(this.resultsDiv.innerHTML="",this.isSpinnerVisible=!1)),this.previewsValue=this.searchInput.value}getResults(){this.isSpinnerVisible=!1,this.reqResults=[];try{Promise.all([fetch(`${universityData.root_url}/wp-json/university/v1/search?term=${this.searchInput.value}`).then(e=>e.json()).then(e=>e)]).then(e=>{console.log(e[0]),this.resultsDiv.innerHTML=`\n          <div class="row">\n            <div class="one-third">\n              <h2 class="search-overlay__section-title">General Info</h2>\n                ${e[0].generalInfo.length?'<ul class="link-list min-list">':"<p>No general information matches that search!</p>"}\n                  ${e[0].generalInfo.map(e=>`<li><a href="${e.permalink}">${e.title}</a> ${"post"===e.postType?"by "+e.authorName:""}</li>`).join("")}\n                ${e[0].generalInfo.length?"</ul>":""}\n            </div>\n            <div class="one-third">\n              <h2 class="search-overlay__section-title">Programs</h2>\n                ${e[0].programs.length?'<ul class="link-list min-list">':`<p>No programs matches that search! <a href="${universityData.root_url}/programs">View all programs</a></p>`}\n                ${e[0].programs.map(e=>`<li><a href="${e.permalink}">${e.title}</a> ${"post"===e.type?"by "+e.authorName:""}</li>`).join("")}\n                ${e[0].programs.length?"</ul>":""}\n              <h2 class="search-overlay__section-title">Professors</h2>\n                ${e[0].professors.length?'<ul class="professor-cards">':"<p>No professors matches that search!</p>"}\n                ${e[0].professors.map(e=>`\n                  <li class="professor-card__list-item">\n                    <a class="professor-card" href="${e.permalink}">\n                      <img src="${e.image}" alt="" class="professor-card__image">\n                      <span class="professor-card__name">${e.title}</span>\n                    </a>\n                  </li>\n                `).join("")}\n                ${e[0].professors.length?"</ul>":""}\n            </div>\n            <div class="one-third">\n              <h2 class="search-overlay__section-title">Campuses</h2>\n                ${e[0].campuses.length?'<ul class="link-list min-list">':`<p>No campuses matches that search! <a href="${universityData.root_url}/campuses">View all campuses</a></p>`}\n                ${e[0].campuses.map(e=>`<li><a href="${e.permalink}">${e.title}</a> ${"post"===e.type?"by "+e.authorName:""}</li>`).join("")}\n                ${e[0].campuses.length?"</ul>":""}\n\n              <h2 class="search-overlay__section-title">Events</h2>\n                ${e[0].events.length?"":`<p>No events matches that search! <a href="${universityData.root_url}/events">View all events</a>/p>`}\n                ${e[0].events.map(e=>`\n                    <div class="event-summary">\n                    <a class="event-summary__date t-center" href="${e.permalink}">\n                      <span class="event-summary__month">${e.month}</span>\n                      <span class="event-summary__day">${e.day}</span>\n                    </a>\n                    <div class="event-summary__content">\n                      <h5 class="event-summary__title headline headline--tiny">\n                        <a href="${e.permalink}">${e.title}</a>\n                      </h5>\n                      <p>${e.description}<a href="${e.permalink}" class="nu gray">Learn more</a>\n                      </p>\n                    </div>\n                  </div>\n                `).join("")}\n            </div>\n          </div>\n        `,this.isSpinnerVisible=!1},()=>{this.resultsDiv.innerHTML="Unexpected error, please try again :D"})}catch(e){console.error(e)}}setupEventListeners(){this.openButton.forEach(e=>e.addEventListener("click",this.openOverlay.bind(this))),this.closeButton.addEventListener("click",this.closeOverlay.bind(this)),document.addEventListener("keydown",this.keyPressDispatcher.bind(this)),this.searchInput.addEventListener("keyup",this.typingLogic.bind(this))}init(){this.setupDOMReferences(),this.setupEventListeners()}};var l=class{constructor(){this.init()}setupDomReferences(){this.notesList=document.querySelector("#myNotes"),this.createNoteButton=document.querySelector(".submit-note")}setupEvents(){this.notesList.addEventListener("click",e=>{e.target.classList.contains("delete-note")&&this.deleteNote(e)}),this.notesList.addEventListener("click",e=>{e.target.classList.contains("edit-note")&&this.editNote(e)}),this.notesList.addEventListener("click",e=>{e.target.classList.contains("update-note")&&this.saveNote(e)}),this.createNoteButton&&this.createNoteButton.addEventListener("click",this.createNote.bind(this))}async deleteNote(e){this.note=e.target.parentNode,"LI"===this.note.tagName&&(this.dataId=this.note.dataset.id),await fetch(`${universityData.root_url}/wp-json/wp/v2/note/${this.dataId}`,{method:"DELETE",headers:{"X-WP-Nonce":""+universityData.nonce,"Content-Type":"application/json"},body:JSON.stringify(null)}).then(e=>e.json()).then(e=>{this.note.remove(),document.querySelector(".note-limit-message").classList.remove("active")})}async saveNote(e){this.noteToSave=e.target.parentNode,this.innerElements=this.getInnerElements(this.noteToSave),this.updatedPost={title:this.innerElements.inputTitle.value,content:this.innerElements.textarea.value},"LI"===this.noteToSave.tagName&&(this.dataId=this.noteToSave.dataset.id),await fetch(`${universityData.root_url}/wp-json/wp/v2/note/${this.dataId}`,{method:"POST",headers:{"X-WP-Nonce":""+universityData.nonce,"Content-Type":"application/json"},body:JSON.stringify(this.updatedPost)}).then(e=>e.json()).then(e=>this.makeNoteReadOnly(this.getInnerElements(this.noteToSave)))}async createNote(e){this.ourNewPost={title:e.target.parentNode.querySelector(".new-note-title").value,content:e.target.parentNode.querySelector(".new-note-body").value,status:"publish"},await fetch(universityData.root_url+"/wp-json/wp/v2/note/",{method:"POST",headers:{"X-WP-Nonce":""+universityData.nonce,"Content-Type":"application/json"},body:JSON.stringify(this.ourNewPost)}).then(e=>e.json()).then(t=>{this.newPostItem=document.createElement("LI"),this.newPostItem.classList.add("note__item"),this.newPostItem.setAttribute("data-state","readonly"),this.newPostItem.setAttribute("data-id",t.id),this.newPostItem.innerHTML=`\n        <input readonly class="note-title-field" type="text" name="" value="${t.title.raw}">\n        <span class="edit-note">\n          <i class="far fa-edit" aria-hidden="true"></i> Edit\n        </span>\n        <span class="delete-note"><i class="fas fa-trash" aria-hidden="true"></i> Delete</span>\n        <textarea readonly class="note-body-field" name="" cols="30"\n          rows="10">${t.content.raw}</textarea>\n        <span class="update-note btn btn--blue btn--small">\n          <i class="fas fa-arrow-right" aria-hidden="true"></i> Save\n        </span>`,e.target.parentNode.querySelector(".new-note-title").value="",e.target.parentNode.querySelector(".new-note-body").value="",this.notesList.insertBefore(this.newPostItem,this.notesList.firstChild),document.querySelector(".note-limit-message").classList.remove("active")}).catch(e=>{console.error(e),document.querySelector(".note-limit-message").classList.add("active")})}editNote(e){this.editableNote=e.target.parentNode,"editable"===this.editableNote.dataset.state?(this.editableNote.dataset.state="readonly",this.makeNoteReadOnly(this.getInnerElements(this.editableNote))):"readonly"===this.editableNote.dataset.state&&(this.editableNote.dataset.state="editable",this.makeNoteEditable(this.getInnerElements(this.editableNote)))}getInnerElements(e){return{note:e,editButton:e.querySelector(".edit-note"),saveButton:e.querySelector(".update-note"),inputTitle:e.querySelector(".note-title-field"),textarea:e.querySelector(".note-body-field")}}makeNoteEditable(e){e.inputTitle.removeAttribute("readonly"),e.textarea.removeAttribute("readonly"),e.inputTitle.classList.add("note-active-field"),e.textarea.classList.add("note-active-field"),e.saveButton.classList.add("update-note--visible"),e.editButton.innerHTML='<i class="fas fa-times" aria-hidden="true"></i> Cancel'}makeNoteReadOnly(e){e.inputTitle.setAttribute("readonly","readonly"),e.textarea.setAttribute("readonly","readonly"),e.inputTitle.classList.remove("note-active-field"),e.textarea.classList.remove("note-active-field"),e.saveButton.classList.remove("update-note--visible"),e.editButton.innerHTML='<i class="far fa-edit" aria-hidden="true"></i> Edit'}init(){this.setupDomReferences(),this.setupEvents(),console.log("[myNotes] initialized")}};new a,new r,new n,new o,new l}]);